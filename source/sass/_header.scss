@use 'resets';
@use 'variables';

.header {
  min-height:300px;
  height: 100vh;
//  position: relative;
//  overflow: hidden;
  > * {
    position: absolute;
  }
  .navbar {
    top: 0;
    right: 0;
    display: grid;
  }
  &__showcaseimg {
    //display set to block in _resets
    object-fit: cover;
    min-width: 200px;
    min-height:300px;
    width: 100%;
    height: 100%;
  }

 h1 {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
  }
}
.hamburger {
  position: absolute;
  z-index: 999;
  top: variables.$hamburgerMargin;
  right: variables.$hamburgerMargin;
  height: variables.$hamburgerSize;
  width: variables.$hamburgerSize;
  @include variables.flexcenter(column, stretch, space-evenly);
  > div {
    height: variables.$hamburgerLineHeight;
    border-radius: 5px;
    background-color: variables.$hamburgerOff;
    transition: 0.3s transform cubic-bezier(0.01, 0.62, 0.63, 0.79);
    //bezier generated using firefox dev tools
  }
  &:hover {
    cursor: pointer;
    //when an object is rotated, the axis rotate with it,
    //they don't get fixed to the initial position.
    //so x and y are pointing to the corners of the container.
  }
  &__line1, &__line2, &__line3{
      background-color:variables.$hamburgerOn;}
  &__line1 {
    transform: rotateZ(225deg) translate(-5px, -5px);
  }
  &__line2 {
    display: none;
  }
  &__line3 {
    transform: rotateZ(-225deg) translate(-5px, 5px);
  }
}

.navbar__ul {
  display: grid;
  place-items: center;
  position: absolute;
  right: 0;
  width: 0;
  top: 0;
  height: 100vh;
  z-index: 10;
  padding-top: 3rem;
  overflow: hidden;
  transition: width 0.5s ease-out;
  background-color: #87744e;
}
//this class is added to navbar using js. It switches smoothly from width:0; to width:100vw;
.trigger__navbar {
  width: 100vw;
}
@media screen and (min-width:700px){
    .trigger__navbar{width:50vw;}
}
